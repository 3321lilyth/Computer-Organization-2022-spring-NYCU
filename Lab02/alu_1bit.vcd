$date
	Tue Mar 29 21:15:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_1bit_tb $end
$var wire 1 ! sum $end
$var wire 1 " carry $end
$var reg 1 # Ainvert $end
$var reg 1 $ Binvert $end
$var reg 1 % a $end
$var reg 1 & b $end
$var reg 1 ' cin $end
$var reg 1 ( less $end
$var reg 2 ) operation [1:0] $end
$scope module UUT $end
$var wire 1 # Ainvert $end
$var wire 1 $ Binvert $end
$var wire 1 * _add $end
$var wire 1 + _and $end
$var wire 1 , _or $end
$var wire 1 ' cin $end
$var wire 1 " cout $end
$var wire 1 - eq $end
$var wire 1 . g $end
$var wire 1 / in1 $end
$var wire 1 0 in2 $end
$var wire 1 ( less $end
$var wire 2 1 operation [1:0] $end
$var wire 1 2 p $end
$var wire 1 % src1 $end
$var wire 1 & src2 $end
$var reg 1 ! result $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
02
b0 1
00
0/
0.
0-
0,
0+
0*
b0 )
0(
0'
0&
0%
0$
0#
0"
0!
$end
#21000
1!
1*
12
1,
1-
10
b1 )
b1 1
1&
#42000
0!
1"
0*
b10 )
b10 1
1'
1(
#63000
0"
02
0,
0-
1!
0*
00
b11 )
b11 1
0'
0&
#84000
